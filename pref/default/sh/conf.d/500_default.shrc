# =====
# shell
# =====
export LC_ALL=C
export LANG=en_US.UTF-8
export EDITOR=vim

addpath $HOME/.local/bin /usr/local/bin /usr/local/sbin /usr/bin /bin /usr/sbin /sbin

if (type envpath &> /dev/null); then
  eval "$(envpath)"
fi

# =====
# less
# =====
if [ -n "$XDG_DATA_HOME" ]; then
  export LESSHISTFILE="${XDG_DATA_HOME}/less/history"
  export LESSKEY="${XDG_DATA_HOME}/less/keys"
fi

# =====
# asdf
# =====
if [ -n "$XDG_CONFIG_HOME" ]; then
  export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdf/config"
fi
if [ -n "$XDG_DATA_HOME" ]; then
  export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
fi

# =====
# gibo
# =====
if [ -n "$XDG_CACHE_HOME" ]; then
  export GIBO_BOILERPLATES="$XDG_CACHE_HOME/gibo"
fi


# =====
# fzf
# =====
if (which fzf &> /dev/null); then
  export FZF_DEFAULT_OPTS='--height 50% --border --reverse --bind ctrl-k:kill-line --bind ctrl-j:execute::'

  function fzf-file () {
    local selected
    selected=$(find . -maxdepth 20 | grep -v '/\.' | tail -n +2 | fzf)
    if [ -n "$selected" ]; then
      BUFFER="${BUFFER}${selected}"
      CURSOR=$#BUFFER
    fi
    zle reset-prompt
  }

  function fzf-src() {
    local selected
    selected=$(ghq list --full-path | sed -e "s|${HOME}|~|" | fzf)
    if [ -n "$selected" ]; then
      BUFFER="${BUFFER}${selected}"
      CURSOR=$#BUFFER
    fi
    zle reset-prompt
  }

  function fzf-gitlog () {
    if [[ ! "$BUFFER" =~ "\s*(git|tig)" ]]; then
      return
    fi

    local selected
    selected=$(git log --oneline | fzf | awk '{ print $1 }')
    if [ -n "$selected" ]; then
      BUFFER="${BUFFER}${selected}"
      CURSOR=$#BUFFER
    fi
    zle reset-prompt
  }

  function fzf-branch () {
    if [[ ! "$BUFFER" =~ "\s*(git|tig)" ]]; then
      return
    fi

    local selected
    selected=$(git branch -vv | fzf | awk '$0 = substr($0, 3) { print $1 }')
    if [ -n "$selected" ]; then
      BUFFER="${BUFFER}${selected}"
      CURSOR=$#BUFFER
    fi
    zle reset-prompt
  }

  function fzf-history() {
    local tac
    if which tac &> /dev/null; then
      tac="tac"
    else
      tac="tail -r"
    fi
  
    local selected
    selected=$(history 1 | eval $tac | fzf  --query "$LBUFFER" | awk '{$1=""; print $0}' | xargs)
    if [ -n "$selected" ]; then
      BUFFER="${BUFFER}${selected}"
      CURSOR=$#BUFFER
    fi
    zle reset-prompt
  }
fi

# ===
# Git
# ===
alias t='tig'

# =====
# Python
# =====
export PYTHONDONTWRITEBYTECODE=1
export PIPENV_VENV_IN_PROJECT=true

if [ -n "$XDG_CONFIG_HOME" ]; then
  export IPYTHONDIR="$XDG_CONFIG_HOME/ipython"

  if [ -f $XDG_CONFIG_HOME/python/startup.py ]; then
    export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/startup.py"
  fi
fi

# =====
# Ruby / Gem
# =====
if [ -n "$XDG_CACHE_HOME" ]; then
  export GEM_SPEC_CACHE="$XDG_CACHE_HOME/gem"
fi

# =====
# Ruby / Bundler
# =====
if [ -n "$XDG_CACHE_HOME" ]; then
  export BUNDLE_USER_CACHE="$XDG_CACHE_HOME/bundle"
fi
if [ -n "$XDG_CONFIG_HOME" ]; then
  export BUNDLE_USER_CONFIG="$XDG_CONFIG_HOME/bundle/config"
fi
if [ -n "$XDG_DATA_HOME" ]; then
  export BUNDLE_USER_PLUGIN="$XDG_DATA_HOME/bundle/plugin"
fi

# =====
# Node.js
# =====
if [ -n "$XDG_DATA_HOME" ]; then
  export NODE_REPL_HISTORY="$XDG_DATA_HOME/node/history"
fi

# =====
# Node.js / npm
# =====
if [ -n "$XDG_CONFIG_HOME" ]; then
  export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/config"
fi
if [ -n "$XDG_CACHE_HOME" ]; then
  export NPM_CONFIG_CACHE="$XDG_CACHE_HOME/npm"
fi

# =====
# Dart / Flutter
# =====
if [ -n "$XDG_CACHE_HOME" ]; then
  export PUB_CACHE="$XDG_CACHE_HOME/pub"

  if [ -d $PUB_CACHE/bin ]; then
    addpath $PUB_CACHE/bin
  fi
fi

# =====
# Rust
# =====
if [ -n "$XDG_CACHE_HOME" ]; then
  export CARGO_HOME="$XDG_CACHE_HOME/cargo"

  if [ -d $CARGO_HOME/bin ]; then
    addpath $CARGO_HOME/bin
  fi
fi

# ===
# Gradle
# ===
if [ -n "$XDG_DATA_HOME" ]; then
  export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
fi

# =====
# MySQL
# =====
if [ -n "$XDG_DATA_HOME" ]; then
  export MYSQL_HISTFILE="$XDG_DATA_HOME/mysql/history"
fi

# vim: ft=sh sw=2 ts=2 sts=2
